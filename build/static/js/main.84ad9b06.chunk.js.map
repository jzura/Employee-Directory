{"version":3,"sources":["components/Col/index.js","components/Container/index.js","components/TableHeader/index.js","components/TableBody/index.js","components/EmployeeTable/index.js","components/Footer/index.js","components/Header/index.js","components/Row/index.js","components/SearchForm/index.js","App.js","index.js"],"names":["Col","props","size","split","map","join","className","children","Container","style","TableHeader","headers","colNames","forEach","element","header","onClick","handleEmployeeSort","key","getHeaderName","push","getTableHeaders","TableBody","employees","employee","id","tableData","Object","keys","data","getTableRowData","EmployeeTable","Table","responsive","Footer","Header","href","target","icon","faGithub","color","Row","fluid","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","handleFormSubmit","App","state","searchedName","event","preventDefault","compareFunction","employeesToSort","innerText","e1","e2","compareTwoStrings","department","email","parseInt","console","log","sort","setState","trim","length","filteredEmployee","filter","includes","string1","string2","marginTop","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84ad9b06.chunk.js","sourcesContent":["import React from \"react\";\n\n// function to create columns\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size}>{props.children}</div>;\n}\n\nexport default Col;\n","  \nimport React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nconst TableHeader = (props) => {\n    return (\n        <thead>\n            <tr>\n                {getTableHeaders(props)}\n            </tr>\n        </thead>\n    );\n}\n\n//create column names\nfunction getTableHeaders(props) {\n    const headers = [];\n    props.colNames.forEach(element => {\n        const header = <th className=\"header\" onClick={props.handleEmployeeSort} key={element}>\n            {getHeaderName(element)}            \n        </th>\n        headers.push(header);\n    });\n    return headers;\n}\n// easy to read columns \nfunction getHeaderName(element) {\n    switch(element) {\n        case \"id\":\n            return \"ID\";\n        case \"name\":\n            return \"Name\";\n        case \"department\":\n            return \"Department\";\n        case \"email\":\n            return \"Email\";\n        default:\n            return element;\n    }\n}\n\nexport default TableHeader;","import React from \"react\";\nimport \"./style.css\";\n\nconst TableBody = (props) => {\n    return (<tbody>\n        {props.employees.map(\n            employee => {\n                return (\n                    <tr className=\"tableRow\" key={employee.id}>\n                        {getTableRowData(employee)}\n\n                    </tr>\n                );\n            }\n        )}\n    </tbody>);\n};\n\n//create output of employee data depending on what name is searched\nfunction getTableRowData(employee){\n    const tableData = [];\n    Object.keys(employee)\n    .forEach(data => tableData.push(<td key={data}>{employee[data]}</td>));\n    return tableData;\n}\n\nexport default TableBody;","import React from \"react\";\nimport TableHeader from \"../TableHeader\";\nimport TableBody from \"../TableBody\";\nimport Table from 'react-bootstrap/Table';\n\nfunction EmployeeTable(props) {\n  return (<Table responsive>\n    <TableHeader\n      colNames={props.colNames}\n      handleEmployeeSort={props.handleEmployeeSort}\n    />\n    <TableBody\n      employees={props.employees}\n    />\n  </Table>\n  );\n}\n\nexport default EmployeeTable;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>John Zurakowski GitHub: jzura</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nconst Header = () => {\n  return (\n    <header>\n      <div  className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4 text-center\">Employee Directory</h1>\n          <p className=\"lead text-center\">This application allows the user to search employees</p>\n          <div className=\"text-center\">\n            <a href=\"https://github.com/jzura\" target=\"/blank\">\n              <FontAwesomeIcon icon={faGithub} size=\"4x\" style={{color: \"white\"}}/>\n            </a>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element \n//we can create autofill suggestions based on the props.name array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"employee\">Employee Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"employee\"\n          list=\"employees\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a employee name to search...\"\n          id=\"employee\"\n        />\n        <datalist id=\"employees\">\n          {props.employees.map(employee => (\n            <option value={employee.name} key={employee.id} />\n          ))}\n        </datalist>\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from 'react';\nimport Col from './components/Col';\nimport Container from './components/Container';\nimport EmployeeTable from './components/EmployeeTable';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Row from './components/Row';\nimport SearchForm from './components/SearchForm';\nimport employees from './utils/employees.json';   //Employee Data\n\n\n// Main App Function\n\nclass App extends React.Component {\n\n  state = {\n    employees,\n    searchedName: \"\",\n  };\n\n  // Function to compare two strings\n  compareTwoStrings(string1, string2) {\n    if (string1 === string2) {\n      return 0;\n    }\n    else if (string1 < string2) {\n      return -1;\n    }\n    else {\n      return 1;\n    }\n  }\n\n // Function will sort employees based on which column is selected\n  handleEmployeeSort = event => {\n    event.preventDefault();\n    const employeesToSort = this.state.employees;\n    let compareFunction;\n    const sortCriteria = event.target.innerText;\n    switch (sortCriteria) {\n      case \"Name\":\n        compareFunction = (e1, e2) => this.compareTwoStrings(e1.name, e2.name);\n        break;\n      case \"Department\":\n        compareFunction = (e1, e2) => this.compareTwoStrings(e1.department, e2.department);\n        break;\n      case \"Email ID\":\n        compareFunction = (e1, e2) => this.compareTwoStrings(e1.email, e2.email);\n        break;\n      case \"Employee ID\":\n        compareFunction = (e1, e2) => (parseInt(e1.id) - parseInt(e2.id));\n        break;\n      default:\n        console.log(\"Not Supported\");\n    }\n    employeesToSort.sort(compareFunction);\n    this.setState({ employees: employeesToSort });\n  }\n\n  // handler to handle the search box input change\n  handleInputChange = event => {\n    this.setState({ searchedName: event.target.value });\n  };\n\n  // handlers the data returned based of what employee is search for \n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchedName && this.state.searchedName.trim().length) {\n      const filteredEmployee = employees\n        .filter(employee => employee.name.includes(this.state.searchedName));\n      this.setState({ employees: filteredEmployee });\n    }\n    else {\n      this.setState({ employees: employees });\n    }\n  };\n\n  render() {\n    return (<div>\n      <Header />\n      <Container style={{ marginTop: 30 }}>\n        <Row>\n          <Col size=\"md-12\">\n            <SearchForm\n              handleFormSubmit={this.handleFormSubmit}\n              handleInputChange={this.handleInputChange}\n              employees={employees.map(employee => { return { name: employee.name, id: employee.id } })}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <EmployeeTable\n              employees={this.state.employees}\n              handleEmployeeSort={this.handleEmployeeSort}\n              colNames={Object.keys(employees[0])}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </div>);\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}